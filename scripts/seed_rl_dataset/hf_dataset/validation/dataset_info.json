{
  "citation": "",
  "description": "",
  "features": {
    "issue": {
      "dtype": "string",
      "_type": "Value"
    },
    "ctx": {
      ".github/scripts/prep_api_docs_build.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/abstract_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/cpu_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/cuda_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/hpu_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/real_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "benchmark.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "benchmark/benchmarks_entrypoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/adagrad/cpu_adagrad.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/adam/cpu_adam_impl.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/common/deepspeed_aio_common.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_aio_op_desc.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_cpu_op.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_pin_tensor.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_py_aio.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_py_aio_handle.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_py_copy.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_test/ds_aio_job.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/deepspeed4science/evoformer_attn/gemm_kernel_utils.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_gds_op.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_gds_op.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_py_gds_handle.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_py_gds_handle.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/cpu_adagrad.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/cpu_adam.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/cpu_lion.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/quantization.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/quantization_utils.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/simd.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/lion/cpu_lion_impl.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/quantization/pt_binding.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/xpu/aio/deepspeed_cpu_op.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/xpu/includes/simd.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/xpu/includes/type_shim.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/autotuning/autotuner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/deepspeed_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/ds_to_universal.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/universal_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/zero_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/comm/ccl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/comm/comm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/comm/torch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/constants.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/elasticity/elastic_agent.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/env_report.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/git_version_info.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/checkpoint/huggingface_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/engine_factory.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/kernels/ragged_ops/includes/top_k_utils.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/kernels/ragged_ops/linear_blocked_kv_rotary/blocked_kv_rotary.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/inference_policy_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/layer_container_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/container.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/policy.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/modules/implementations/moe/cutlass_multi_gemm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/launcher/multinode_runner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/launcher/runner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/context_manager.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/optimized_linear.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/quantization.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/model_implementations/transformers/ds_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/auto_tp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/containers/llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/layers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/load_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/replace_module.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/ops/fp_quantizer/quantize.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/ops/transformer/inference/triton/matmul_ext.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/profiling/flops_profiler/profiler.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/pydantic_v1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/activation_checkpointing/checkpointing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/base_optimizer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/bf16_optimizer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/checkpoint_engine/nebula_checkpoint_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/checkpoint_engine/torch_checkpoint_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/comm/coalesced_collectives.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/comm/compressed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/comm/hccl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/compiler.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/compression/cupy.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/domino/transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/eigenvalue.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/fp16/onebit/lamb.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/hybrid_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/pipe/engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/pipe/module.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/optimizer_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/partitioned_optimizer_swapper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/partitioned_param_swapper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/pipelined_optimizer_swapper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/tensor_parallel/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/tensor_parallel/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/tensor_parallel/tp_manager.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/mics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/parameter_offload.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/partition_parameters.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/partitioned_param_coordinator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/stage3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/stage_1_and_2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/sequence/layer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/groups.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/logging.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/numa.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/torch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/zero_to_fp32.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/scripts/partner_pkg_table.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/src/theme/ChatModelTabs.js": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/src/theme/EmbeddingTabs.js": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/src/theme/FeatureTables.js": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/configuration_my_new_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/configuration_my_new_model2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/configuration_new_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/image_processing_new_imgproc_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_dummy.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_multimodal1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_my_new_model2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_new_task_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_super.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modular_new_task_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/pytorch/multiple-choice/run_swag.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/pytorch/multiple-choice/run_swag_no_trainer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/quantization/custom_quantization.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/tensorflow/multiple-choice/run_swag.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/training/distributed_training.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/constants.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/conversation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/llm_judge/common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/llm_judge/qa_browser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/apply_delta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/make_delta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_adapter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_cllm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_registry.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_yuan2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/api_provider.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/base_model_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/call_monitor.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/controller.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_anony.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_named.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_vision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_vision_anony.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_vision_named.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_global_state.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_web_server.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_web_server_multi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/lightllm_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/mlx_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/model_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/add_markdown_info.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/classify/category.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/classify/display_score.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/classify/label.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/clean_battle_data.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/clean_chat_data.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/copilot_arena.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/criteria_labeling.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/deduplication.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/elo_analysis.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/monitor.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/monitor_md.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/rating_systems.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/openai_api_server.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/remote_logger.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/sglang_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vision/create_vqa_examples_dir.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vision/create_vqa_examples_json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vision/image.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vllm_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/train/train_with_template.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/train/train_yuan2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "functorch/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/agent_toolkits/github/toolkit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/agent_toolkits/load_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/callbacks/openai_info.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chains/graph_qa/memgraph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chains/graph_qa/prompts.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/azure_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/databricks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/deepinfra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/litellm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/minimax.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/mlx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/oci_generative_ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/perplexity.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_compressors/rankllm_rerank.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/confluence.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/parsers/pdf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/recursive_url_loader.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/youtube.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_transformers/markdownify.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/ascend.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/azure_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/databricks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/fastembed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/huggingface.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/llamacpp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/oci_generative_ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/graphs/age_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/graphs/memgraph_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/databricks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/huggingface_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/mlx_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/oci_generative_ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/retrievers/pinecone_hybrid_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/retrievers/tavily_search_api.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/retrievers/weaviate_hybrid_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/databricks/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/eleven_labs/models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/eleven_labs/text2speech.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/github/prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/jina_search/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/tavily_search/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/yahoo_finance_news.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/github.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/google_scholar.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/jina_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/jira.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/sql_database.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/azure_cosmos_db_no_sql.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/azuresearch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/chroma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/databricks_vector_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/deeplake.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/kinetica.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/opensearch_vector_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/oraclevs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/sqlitevec.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/supabase.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/vdms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/weaviate.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/chat_models/test_naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/embeddings/test_naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/graphs/test_memgraph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/llms/test_mlx_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/tools/test_yahoo_finance_news.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/utilities/test_github.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/vectorstores/test_sqlitevec.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/agent_toolkits/test_github_toolkit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/document_transformers/test_markdownify.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/embeddings/test_llamacpp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/graphs/test_age_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/tools/jina_search/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/tools/jina_search/test_jina_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/_api/beta_decorator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/_api/deprecation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/agents.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/beta/runnables/context.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/callbacks/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/callbacks/file.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/callbacks/manager.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/chat_history.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/chat_sessions.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/document_loaders/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/example_selectors/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/example_selectors/length_based.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/indexing/api.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/indexing/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/fake.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/fake_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/llms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/load/dump.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/load/mapping.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/function.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/human.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/modifier.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/system.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/list.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/openai_functions.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/openai_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/pydantic.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompt_values.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/chat.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/few_shot.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/loading.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/string.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/structured.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/retrievers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/configurable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/fallbacks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/graph_ascii.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/graph_png.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/history.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/passthrough.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/retry.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/router.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tools/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tools/structured.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/core.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/evaluation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/langchain.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/run_collector.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/aiter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/function_calling.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/html.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/iter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/json_schema.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/mustache.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/pydantic.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/usage.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/vectorstores/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/vectorstores/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/_api/test_beta_decorator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/_api/test_deprecation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/callbacks/test_dispatch_custom_event.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/conftest.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/embeddings/test_deterministic_embedding.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/fake/test_fake_chat_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/indexing/test_in_memory_indexer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/indexing/test_indexing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/language_models/chat_models/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/language_models/chat_models/test_rate_limiting.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/language_models/llms/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/load/test_serializable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_list_parser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_openai_functions.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_openai_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_pydantic_parser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_xml_parser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/prompts/test_chat.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/prompts/test_prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/pydantic_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_concurrency.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_configurable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_context.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_fallbacks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_history.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_runnable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_runnable_events_v1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_runnable_events_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_tracing_interops.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_messages.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_pydantic_serde.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_setup.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/tracers/test_langchain.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/tracers/test_memory_stream.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/utils/test_function_calling.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/utils/test_pydantic.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/vectorstores/test_in_memory.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/vectorstores/test_vectorstore.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/agents/openai_assistant/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/agents/output_parsers/json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/chains/elasticsearch_database/prompts.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/chains/retrieval.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/chains/sql_database/prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/embeddings/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/indexes/vectorstore.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/model_laboratory.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/tests/unit_tests/callbacks/test_file.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/anthropic/langchain_anthropic/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/anthropic/tests/integration_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/chroma/langchain_chroma/vectorstores.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/deepseek/langchain_deepseek/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/deepseek/tests/integration_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/huggingface/langchain_huggingface/llms/huggingface_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/huggingface/tests/integration_tests/test_standard.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/huggingface/tests/unit_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/mistralai/langchain_mistralai/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/mistralai/langchain_mistralai/embeddings.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/mistralai/tests/unit_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/ollama/langchain_ollama/embeddings.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/chat_models/azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/chat_models/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/embeddings/azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/embeddings/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/llms/azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/integration_tests/chat_models/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/integration_tests/llms/test_azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/unit_tests/chat_models/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/unit_tests/embeddings/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/standard-tests/langchain_tests/integration_tests/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/standard-tests/langchain_tests/integration_tests/tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/standard-tests/tests/unit_tests/test_basic_tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/text-splitters/langchain_text_splitters/html.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/text-splitters/tests/unit_tests/test_text_splitters.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/async_io.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/builder.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/evoformer_attn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/gds.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/hpu/builder.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/mlu/fused_adam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/npu/async_io.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/npu/fused_adam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/xpu/async_io.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "playground/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "playground/benchmark/benchmark_api_provider.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "read_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "run.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "scripts/deberta_scrtipt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "setup.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/agents.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/evaluate_agent.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/python_interpreter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/translation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/cache_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/commands/add_fast_image_processor.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/commands/add_new_model_like.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/commands/transformers_cli.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/configuration_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/data/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/data/data_collator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/generation/candidate_generator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/generation/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_processing_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_processing_utils_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_transforms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/bitsandbytes.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/deepspeed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/executorch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/finegrained_fp8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/higgs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/sdpa_attention.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/spqr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/tiktoken.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/loss/loss_grounding_dino.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/loss/loss_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/modeling_gguf_pytorch_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/modeling_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/albert/modeling_albert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/aria/configuration_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/aria/modeling_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/aria/modular_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/audio_spectrogram_transformer/modeling_audio_spectrogram_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/configuration_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/image_processing_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/modeling_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/processing_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/tokenization_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bamba/modeling_bamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bamba/modular_bamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/beit/modeling_beit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/beit/modeling_flax_beit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bert/modeling_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bert_generation/modeling_bert_generation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/big_bird/modeling_big_bird.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/biogpt/modeling_biogpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bit/modeling_bit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/blip/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/blip/image_processing_blip_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/blip_2/modeling_blip_2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bloom/modeling_bloom.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/camembert/modeling_camembert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/chameleon/modeling_chameleon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/clip/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/clip/image_processing_clip_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/clip/modeling_clip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/codegen/modeling_codegen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere/configuration_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere/modeling_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere/modular_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere2/configuration_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere2/modeling_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere2/modular_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/conditional_detr/modeling_conditional_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/convnext/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/convnext/image_processing_convnext_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/ctrl/modeling_ctrl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dab_detr/modeling_dab_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/data2vec/modeling_data2vec_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/data2vec/modeling_data2vec_vision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dbrx/modeling_dbrx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deformable_detr/image_processing_deformable_detr_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deformable_detr/modeling_deformable_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deit/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deit/image_processing_deit_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deit/modeling_deit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/open_llama/modeling_open_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/tvlt/modeling_tvlt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/vit_hybrid/modeling_vit_hybrid.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/configuration_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/convert_depth_pro_weights_to_hf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/image_processing_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/image_processing_depth_pro_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/modeling_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/detr/image_processing_detr_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/detr/modeling_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/diffllama/modeling_diffllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2/configuration_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2/modeling_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2/modeling_flax_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2_with_registers/modeling_dinov2_with_registers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dpt/modeling_dpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/electra/modeling_electra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/emu3/modeling_emu3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/emu3/modular_emu3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/ernie/modeling_ernie.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/falcon/modeling_falcon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/falcon_mamba/modeling_falcon_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/flava/modeling_flava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/focalnet/modeling_focalnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/fuyu/modeling_fuyu.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/fuyu/processing_fuyu.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma/configuration_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma/modeling_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma/modular_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma2/configuration_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma2/modeling_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma2/modular_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/git/modeling_git.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/glm/configuration_glm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/glm/modeling_glm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/got_ocr2/configuration_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/got_ocr2/modeling_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/got_ocr2/modular_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt2/modeling_gpt2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neo/modeling_gpt_neo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox/configuration_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox/modeling_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox/modular_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox_japanese/modeling_gpt_neox_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gptj/modeling_gptj.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granite/configuration_granite.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granite/modeling_granite.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granitemoe/modeling_granitemoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granitemoeshared/modeling_granitemoeshared.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/grounding_dino/modeling_grounding_dino.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/helium/configuration_helium.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/helium/modeling_helium.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics/modeling_idefics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics/modeling_tf_idefics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics2/modeling_idefics2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics3/modeling_idefics3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/ijepa/modeling_ijepa.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/imagegpt/modeling_imagegpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/instructblip/modeling_instructblip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/instructblipvideo/modeling_instructblipvideo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/instructblipvideo/modular_instructblipvideo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/jamba/modeling_jamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/jetmoe/modeling_jetmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/kosmos2/modeling_kosmos2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/kosmos2/processing_kosmos2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv2/tokenization_layoutlmv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv2/tokenization_layoutlmv2_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv3/tokenization_layoutlmv3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv3/tokenization_layoutlmv3_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutxlm/tokenization_layoutxlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutxlm/tokenization_layoutxlm_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/led/tokenization_led.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/led/tokenization_led_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llama/configuration_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llama/modeling_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/configuration_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/image_processing_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/image_processing_llava_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/modeling_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/configuration_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/image_processing_llava_next_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/modeling_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/processing_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/configuration_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/modeling_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/modular_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/processing_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/image_processing_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/image_processing_llava_onevision_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/modeling_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/modular_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/processing_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/longt5/modeling_longt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/luke/modeling_luke.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/luke/tokenization_luke.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mamba/modeling_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/markuplm/tokenization_markuplm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/markuplm/tokenization_markuplm_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/maskformer/modeling_maskformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mbart/modeling_mbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/megatron_bert/modeling_megatron_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mimi/modeling_mimi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/configuration_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/modeling_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/modeling_tf_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/modular_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mixtral/configuration_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mixtral/modeling_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mixtral/modular_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mllama/modeling_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mllama/processing_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mluke/tokenization_mluke.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mobilevit/modeling_mobilevit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mobilevit/modeling_tf_mobilevit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/moonshine/modeling_moonshine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/moshi/modeling_moshi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mpt/modeling_mpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mt5/modeling_mt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/musicgen/modeling_musicgen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/nemotron/modeling_nemotron.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/nougat/tokenization_nougat_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo/configuration_olmo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo/modeling_olmo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo2/configuration_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo2/modeling_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo2/modular_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmoe/modeling_olmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/openai/modeling_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/opt/modeling_opt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/owlv2/processing_owlv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/owlvit/processing_owlvit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/paligemma/configuration_paligemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/paligemma/modeling_paligemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/persimmon/modeling_persimmon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi/configuration_phi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi/modeling_phi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi3/configuration_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi3/modeling_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi3/modular_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phimoe/modeling_phimoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/pix2struct/modeling_pix2struct.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/pixtral/image_processing_pixtral_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/pop2piano/modeling_pop2piano.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2/configuration_qwen2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2/modeling_qwen2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/configuration_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/image_processing_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/modeling_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/modular_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/processing_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_audio/modeling_qwen2_audio.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_audio/processing_qwen2_audio.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_moe/configuration_qwen2_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_moe/modeling_qwen2_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/configuration_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/image_processing_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/image_processing_qwen2_vl_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/modeling_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/processing_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/recurrent_gemma/modeling_recurrent_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/reformer/modeling_reformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rembert/modeling_rembert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roberta/modeling_roberta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roberta_prelayernorm/modeling_roberta_prelayernorm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roc_bert/modeling_roc_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roc_bert/tokenization_roc_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roformer/modeling_roformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr/image_processing_rt_detr_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr/modeling_rt_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr/modular_rt_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr_v2/modeling_rt_detr_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr_v2/modular_rt_detr_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rwkv/modeling_rwkv.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/sam/processing_sam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/seamless_m4t/modeling_seamless_m4t.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/seamless_m4t_v2/modeling_seamless_m4t_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/seggpt/modeling_seggpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/configuration_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/convert_siglip_to_hf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/image_processing_siglip_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/modeling_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/processing_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/configuration_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/convert_siglip2_to_hf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/image_processing_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/image_processing_siglip2_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/modeling_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/modular_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/processing_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/configuration_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/image_processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/modeling_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/modular_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/video_processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/stablelm/modeling_stablelm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/starcoder2/configuration_starcoder2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/starcoder2/modeling_starcoder2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/swin2sr/modeling_swin2sr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/switch_transformers/modeling_switch_transformers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/t5/modeling_t5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/tapas/tokenization_tapas.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/udop/modeling_udop.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/udop/tokenization_udop.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/udop/tokenization_udop_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/umt5/modeling_umt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/video_llava/configuration_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/video_llava/modeling_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/videomae/modeling_videomae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vilt/modeling_vilt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vipllava/configuration_vipllava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vipllava/modeling_vipllava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit/image_processing_vit_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit/modeling_vit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit_mae/modeling_vit_mae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit_msn/modeling_vit_msn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vitdet/modeling_vitdet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vitpose_backbone/modeling_vitpose_backbone.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vivit/modeling_vivit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/wav2vec2/tokenization_wav2vec2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/whisper/generation_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/whisper/modeling_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xglm/modeling_tf_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xglm/modeling_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xlm/modeling_xlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xlm_roberta/modeling_xlm_roberta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xlm_roberta_xl/modeling_xlm_roberta_xl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xmod/modeling_xmod.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/yolos/modeling_yolos.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/zamba/modeling_zamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/zamba2/modeling_zamba2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/image_text_to_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/zero_shot_image_classification.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/processing_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pytorch_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_compressed_tensors.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_finegrained_fp8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_higgs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_spqr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/testing_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/tokenization_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/tokenization_utils_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/tokenization_utils_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/trainer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/trainer_callback.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/training_args.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/doc.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/dummy_pt_objects.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/dummy_torchvision_objects.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/dummy_vision_objects.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/import_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/quantization_config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "test/export/test_export.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "test/quantization/pt2e/test_quantize_pt2e.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/deepspeed/test_deepspeed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/generation/test_candidate_generator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/generation/test_flax_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/generation/test_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/launch_openai_api_test_server.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/load_test.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/model/BingBertSquad/BingBertSquad_test_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/model/Megatron_GPT2/run_checkpoint_test.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/model/Megatron_GPT2/test_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/aria/test_modeling_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/autoformer/test_modeling_autoformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bamba/test_modeling_bamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bark/test_modeling_bark.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bart/test_modeling_bart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bart/test_modeling_flax_bart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/beit/test_modeling_beit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bert/test_modeling_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bert_generation/test_modeling_bert_generation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/big_bird/test_modeling_big_bird.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bigbird_pegasus/test_modeling_bigbird_pegasus.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/biogpt/test_modeling_biogpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bit/test_modeling_bit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot/test_modeling_blenderbot.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot/test_modeling_flax_blenderbot.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot_small/test_modeling_blenderbot_small.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot_small/test_modeling_flax_blenderbot_small.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blip/test_image_processing_blip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blip/test_modeling_blip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blip_2/test_modeling_blip_2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bloom/test_modeling_bloom.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bloom/test_modeling_flax_bloom.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bros/test_modeling_bros.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/chameleon/test_modeling_chameleon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/clip/test_image_processing_clip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/clvp/test_modeling_clvp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/codegen/test_modeling_codegen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cohere/test_modeling_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cohere2/test_modeling_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/conditional_detr/test_modeling_conditional_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/convnext/test_image_processing_convnext.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/convnext/test_modeling_convnext.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/convnextv2/test_modeling_convnextv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cpmant/test_modeling_cpmant.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/ctrl/test_modeling_ctrl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cvt/test_modeling_cvt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dab_detr/test_modeling_dab_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/data2vec/test_modeling_data2vec_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/data2vec/test_modeling_data2vec_vision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dbrx/test_modeling_dbrx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/decision_transformer/test_modeling_decision_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/deformable_detr/test_modeling_deformable_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/deit/test_image_processing_deit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/deit/test_modeling_deit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_anything/test_modeling_depth_anything.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_pro/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_pro/test_image_processing_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_pro/test_modeling_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/detr/test_modeling_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/diffllama/test_modeling_diffllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinat/test_modeling_dinat.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinov2/test_modeling_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinov2/test_modeling_flax_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinov2_with_registers/test_modeling_dinov2_with_registers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dpt/test_modeling_dpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dpt/test_modeling_dpt_auto_backbone.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dpt/test_modeling_dpt_hybrid.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/efficientnet/test_modeling_efficientnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/electra/test_modeling_electra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/emu3/test_modeling_emu3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/ernie/test_modeling_ernie.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/esm/test_modeling_esm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/esm/test_modeling_esmfold.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/falcon/test_modeling_falcon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/falcon_mamba/test_modeling_falcon_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/flaubert/test_modeling_flaubert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/focalnet/test_modeling_focalnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/fsmt/test_modeling_fsmt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/fuyu/test_modeling_fuyu.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gemma/test_modeling_flax_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gemma/test_modeling_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gemma2/test_modeling_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/git/test_modeling_git.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/glm/test_modeling_glm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/glpn/test_modeling_glpn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/got_ocr2/test_modeling_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt2/test_modeling_flax_gpt2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt2/test_modeling_gpt2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_bigcode/test_modeling_gpt_bigcode.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neo/test_modeling_flax_gpt_neo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neo/test_modeling_gpt_neo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neox/test_modeling_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neox_japanese/test_modeling_gpt_neox_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gptj/test_modeling_flax_gptj.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gptj/test_modeling_gptj.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/granite/test_modeling_granite.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/granitemoe/test_modeling_granitemoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/grounding_dino/test_modeling_grounding_dino.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/helium/test_modeling_helium.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/hiera/test_modeling_hiera.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/idefics/test_modeling_idefics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/idefics2/test_modeling_idefics2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/idefics3/test_modeling_idefics3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/ijepa/test_modeling_ijepa.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/imagegpt/test_modeling_imagegpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/informer/test_modeling_informer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/instructblip/test_modeling_instructblip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/instructblipvideo/test_modeling_instructblipvideo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/jamba/test_modeling_jamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/jetmoe/test_modeling_jetmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/kosmos2/test_modeling_kosmos2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/led/test_modeling_led.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/lilt/test_modeling_lilt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llama/test_modeling_flax_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llama/test_modeling_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_configuration_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_image_processing_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_modeling_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_processor_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next/test_image_processing_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next/test_modeling_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next_video/test_image_processing_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next_video/test_modeling_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next_video/test_processor_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_onevision/test_image_processing_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_onevision/test_modeling_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_onevision/test_processor_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/longt5/test_modeling_flax_longt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/longt5/test_modeling_longt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/m2m_100/test_modeling_m2m_100.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mamba/test_modeling_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mamba2/test_modeling_mamba2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/marian/test_modeling_flax_marian.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/marian/test_modeling_marian.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mask2former/test_modeling_mask2former.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/maskformer/test_modeling_maskformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/maskformer/test_modeling_maskformer_swin.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mbart/test_modeling_flax_mbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mbart/test_modeling_mbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/megatron_bert/test_modeling_megatron_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mistral/test_modeling_flax_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mistral/test_modeling_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mixtral/test_modeling_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mllama/test_modeling_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mllama/test_processor_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilenet_v1/test_modeling_mobilenet_v1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilenet_v2/test_modeling_mobilenet_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilevit/test_modeling_mobilevit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilevitv2/test_modeling_mobilevitv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/modernbert/test_modeling_modernbert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/moonshine/test_modeling_moonshine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/moshi/test_modeling_moshi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mpt/test_modeling_mpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mra/test_modeling_mra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mt5/test_modeling_mt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/musicgen/test_modeling_musicgen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/musicgen_melody/test_modeling_musicgen_melody.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mvp/test_modeling_mvp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/nemotron/test_modeling_nemotron.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/nllb_moe/test_modeling_nllb_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/olmo/test_modeling_olmo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/olmo2/test_modeling_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/olmoe/test_modeling_olmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/openai/test_modeling_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/opt/test_modeling_flax_opt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/opt/test_modeling_opt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/owlv2/test_processor_owlv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/owlvit/test_processor_owlvit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/paligemma/test_modeling_paligemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/paligemma2/test_modeling_paligemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/patchtsmixer/test_modeling_patchtsmixer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pegasus/test_modeling_flax_pegasus.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pegasus/test_modeling_pegasus.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pegasus_x/test_modeling_pegasus_x.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/persimmon/test_modeling_persimmon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/phi/test_modeling_phi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/phi3/test_modeling_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/phimoe/test_modeling_phimoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pix2struct/test_modeling_pix2struct.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pixtral/test_image_processing_pixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/plbart/test_modeling_plbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/poolformer/test_modeling_poolformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pop2piano/test_modeling_pop2piano.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/prophetnet/test_modeling_prophetnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pvt/test_modeling_pvt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pvt_v2/test_modeling_pvt_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2/test_modeling_qwen2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/test_image_processing_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/test_modeling_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/test_processor_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_audio/test_modeling_qwen2_audio.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_moe/test_modeling_qwen2_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_vl/test_modeling_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/recurrent_gemma/test_modeling_recurrent_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/reformer/test_modeling_reformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/regnet/test_modeling_regnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rembert/test_modeling_rembert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/resnet/test_modeling_resnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roberta/test_modeling_roberta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roberta_prelayernorm/test_modeling_roberta_prelayernorm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roc_bert/test_modeling_roc_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roformer/test_modeling_roformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rt_detr/test_modeling_rt_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rt_detr_v2/test_modeling_rt_detr_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rwkv/test_modeling_rwkv.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/sam/test_modeling_sam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/seamless_m4t/test_modeling_seamless_m4t.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/seamless_m4t_v2/test_modeling_seamless_m4t_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/segformer/test_modeling_segformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/seggpt/test_modeling_seggpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip/test_image_processing_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip2/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip2/test_image_processing_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip2/test_modeling_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/test_image_processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/test_modeling_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/test_processor_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/speech_to_text/test_modeling_speech_to_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/speecht5/test_modeling_speecht5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/stablelm/test_modeling_stablelm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/starcoder2/test_modeling_starcoder2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/superglue/test_modeling_superglue.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/superpoint/test_modeling_superpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swiftformer/test_modeling_swiftformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swin/test_modeling_swin.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swin2sr/test_modeling_swin2sr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swinv2/test_modeling_swinv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/switch_transformers/test_modeling_switch_transformers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/t5/test_modeling_flax_t5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/t5/test_modeling_t5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/table_transformer/test_modeling_table_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/textnet/test_modeling_textnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/time_series_transformer/test_modeling_time_series_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/timesformer/test_modeling_timesformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/trocr/test_modeling_trocr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/udop/test_modeling_udop.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/umt5/test_modeling_umt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/upernet/test_modeling_upernet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/video_llava/test_image_processing_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/video_llava/test_modeling_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/videomae/test_modeling_videomae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vipllava/test_modeling_vipllava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit/test_image_processing_vit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit/test_modeling_vit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit_mae/test_modeling_vit_mae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit_msn/test_modeling_vit_msn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitdet/test_modeling_vitdet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitmatte/test_modeling_vitmatte.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitpose/test_modeling_vitpose.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitpose_backbone/test_modeling_vitpose_backbone.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vivit/test_modeling_vivit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/whisper/test_modeling_flax_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/whisper/test_modeling_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xglm/test_modeling_flax_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xglm/test_modeling_tf_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xglm/test_modeling_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xlm/test_modeling_xlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xlm_roberta_xl/test_modeling_xlm_roberta_xl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xlnet/test_modeling_xlnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xmod/test_modeling_xmod.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/yolos/test_modeling_yolos.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/yoso/test_modeling_yoso.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/zamba/test_modeling_zamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/zamba2/test_modeling_zamba2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/zoedepth/test_modeling_zoedepth.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/peft_integration/test_peft_integration.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/pipelines/test_pipelines_audio_classification.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/pipelines/test_pipelines_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/pipelines/test_pipelines_image_text_to_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/bnb/test_4bit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/bnb/test_mixed_int8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensor/test_load_sparse_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensor/test_run_compressed_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensors/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensors/test_compressed_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensors/test_compressed_tensors.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/finegrained_fp8/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/finegrained_fp8/test_fp8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/ggml/test_ggml.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/higgs/test_higgs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/spqr_integration/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/spqr_integration/test_spqr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/torchao_integration/test_torchao.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/repo_utils/modular/test_conversion_order.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_backbone_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_configuration_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_feature_extraction_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_image_processing_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_image_transforms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_image_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_modeling_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_modeling_flax_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_openai_vision_api.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_processing_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_tokenization_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_training_args.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/tokenization/test_tokenization_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/trainer/test_trainer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/trainer/test_trainer_callback.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/alexnet_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/checkpoint/common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/checkpoint/test_universal_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/checkpoint/test_zero_optimizer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/inference/test_inference.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/launcher/test_multinode_runner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/linear/test_ctx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/model_parallelism/test_autotp_training.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/model_parallelism/test_configurable_parallel_mp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/model_parallelism/test_configurable_parallel_pp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/moe/test_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/ops/transformer/inference/test_rope.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/pipe/test_pipe_module.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/activation_checkpointing/test_activation_checkpointing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/comm/test_coalesced_collectives.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/pipe/test_pipe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/test_ds_initialize.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/test_no_sync_ctxt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_nvme_checkpointing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_offload_states.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_zero.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_zero_context.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_zero_multiple_run.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/simple_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/util.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_cache_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_image_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_import_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_modeling_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_VF.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/__config__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/__future__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_appdirs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_export/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_logging/_internal.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_logging/_registrations.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/ao/quantization/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/ao/quantization/pt2e/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/ao/quantization/quantize_pt2e.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/nn/modules/normalization.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/testing/_internal/common_modules.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_copies.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_docstrings.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_modular_conversion.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_repo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_table.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/create_dependency_mapping.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/modular_model_converter.py": {
        "dtype": "string",
        "_type": "Value"
      }
    },
    "patchgt": {
      ".github/scripts/prep_api_docs_build.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/cpu_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/hpu_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "accelerator/real_accelerator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "benchmark.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "benchmark/benchmarks_entrypoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/adagrad/cpu_adagrad.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/adam/cpu_adam_impl.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/common/deepspeed_aio_common.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_aio_op_desc.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_cpu_op.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_pin_tensor.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_py_aio.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_py_aio_handle.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_lib/deepspeed_py_copy.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/aio/py_test/ds_aio_job.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/deepspeed4science/evoformer_attn/gemm_kernel_utils.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_gds_op.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_gds_op.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_py_gds_handle.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/gds/py_lib/deepspeed_py_gds_handle.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/cpu_adagrad.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/cpu_adam.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/cpu_lion.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/quantization.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/quantization_utils.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/includes/simd.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/lion/cpu_lion_impl.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/quantization/pt_binding.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/xpu/aio/deepspeed_cpu_op.cpp": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/xpu/includes/simd.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "csrc/xpu/includes/type_shim.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/autotuning/autotuner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/deepspeed_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/ds_to_universal.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/universal_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/checkpoint/zero_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/comm/ccl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/comm/comm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/comm/torch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/elasticity/elastic_agent.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/checkpoint/huggingface_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/engine_factory.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/kernels/ragged_ops/includes/top_k_utils.h": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/kernels/ragged_ops/linear_blocked_kv_rotary/blocked_kv_rotary.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/inference_policy_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/layer_container_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/container.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/model_implementations/qwen_v2_moe/policy.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/inference/v2/modules/implementations/moe/cutlass_multi_gemm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/launcher/multinode_runner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/launcher/runner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/context_manager.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/optimized_linear.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/linear/quantization.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/model_implementations/transformers/ds_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/auto_tp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/containers/llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/layers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/load_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/module_inject/replace_module.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/ops/fp_quantizer/quantize.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/ops/transformer/inference/triton/matmul_ext.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/profiling/flops_profiler/profiler.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/activation_checkpointing/checkpointing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/base_optimizer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/bf16_optimizer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/checkpoint_engine/nebula_checkpoint_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/checkpoint_engine/torch_checkpoint_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/comm/coalesced_collectives.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/comm/compressed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/comm/hccl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/compiler.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/compression/cupy.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/domino/transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/eigenvalue.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/fp16/onebit/lamb.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/hybrid_engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/pipe/engine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/pipe/module.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/optimizer_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/partitioned_optimizer_swapper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/partitioned_param_swapper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/swap_tensor/pipelined_optimizer_swapper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/tensor_parallel/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/tensor_parallel/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/tensor_parallel/tp_manager.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/mics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/parameter_offload.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/partition_parameters.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/partitioned_param_coordinator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/stage3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/stage_1_and_2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/runtime/zero/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/sequence/layer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/groups.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/logging.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/numa.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/torch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "deepspeed/utils/zero_to_fp32.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/scripts/partner_pkg_table.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/src/theme/ChatModelTabs.js": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/src/theme/EmbeddingTabs.js": {
        "dtype": "string",
        "_type": "Value"
      },
      "docs/src/theme/FeatureTables.js": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/configuration_my_new_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/configuration_my_new_model2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/configuration_new_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/image_processing_new_imgproc_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_dummy.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_multimodal1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_my_new_model2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_new_task_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modeling_super.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/modular-transformers/modular_new_task_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/pytorch/multiple-choice/run_swag.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/pytorch/multiple-choice/run_swag_no_trainer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/quantization/custom_quantization.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/tensorflow/multiple-choice/run_swag.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "examples/training/distributed_training.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/constants.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/conversation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/llm_judge/common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/llm_judge/qa_browser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/apply_delta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/make_delta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_adapter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_cllm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_registry.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/model/model_yuan2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/api_provider.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/base_model_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/call_monitor.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/controller.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_anony.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_named.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_vision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_vision_anony.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_block_arena_vision_named.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_global_state.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_web_server.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/gradio_web_server_multi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/lightllm_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/mlx_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/model_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/add_markdown_info.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/classify/category.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/classify/display_score.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/classify/label.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/clean_battle_data.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/clean_chat_data.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/copilot_arena.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/criteria_labeling.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/deduplication.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/elo_analysis.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/monitor.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/monitor_md.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/monitor/rating_systems.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/openai_api_server.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/remote_logger.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/sglang_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vision/create_vqa_examples_dir.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vision/create_vqa_examples_json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vision/image.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/serve/vllm_worker.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/train/train_with_template.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/train/train_yuan2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "fastchat/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/agent_toolkits/github/toolkit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/agent_toolkits/load_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/callbacks/openai_info.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chains/graph_qa/memgraph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chains/graph_qa/prompts.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/azure_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/databricks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/deepinfra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/litellm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/minimax.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/mlx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/oci_generative_ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/chat_models/perplexity.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_compressors/rankllm_rerank.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/confluence.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/parsers/pdf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/recursive_url_loader.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_loaders/youtube.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/document_transformers/markdownify.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/ascend.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/azure_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/databricks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/fastembed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/huggingface.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/llamacpp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/embeddings/oci_generative_ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/graphs/age_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/graphs/memgraph_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/databricks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/huggingface_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/mlx_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/oci_generative_ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/llms/openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/retrievers/pinecone_hybrid_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/retrievers/tavily_search_api.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/retrievers/weaviate_hybrid_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/databricks/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/eleven_labs/models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/eleven_labs/text2speech.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/github/prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/jina_search/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/tavily_search/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/tools/yahoo_finance_news.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/github.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/google_scholar.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/jina_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/jira.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/utilities/sql_database.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/azure_cosmos_db_no_sql.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/azuresearch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/chroma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/databricks_vector_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/deeplake.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/kinetica.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/opensearch_vector_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/oraclevs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/sqlitevec.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/supabase.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/vdms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/langchain_community/vectorstores/weaviate.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/chat_models/test_naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/embeddings/test_naver.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/graphs/test_memgraph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/llms/test_mlx_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/tools/test_yahoo_finance_news.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/utilities/test_github.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/integration_tests/vectorstores/test_sqlitevec.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/agent_toolkits/test_github_toolkit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/document_transformers/test_markdownify.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/embeddings/test_llamacpp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/graphs/test_age_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/community/tests/unit_tests/tools/jina_search/test_jina_search.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/_api/beta_decorator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/_api/deprecation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/agents.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/beta/runnables/context.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/callbacks/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/callbacks/file.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/callbacks/manager.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/chat_history.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/chat_sessions.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/document_loaders/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/example_selectors/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/example_selectors/length_based.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/indexing/api.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/indexing/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/fake.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/fake_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/language_models/llms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/load/dump.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/load/mapping.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/ai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/function.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/human.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/modifier.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/system.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/messages/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/list.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/openai_functions.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/openai_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/output_parsers/pydantic.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompt_values.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/chat.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/few_shot.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/loading.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/string.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/prompts/structured.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/retrievers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/configurable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/fallbacks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/graph_ascii.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/graph_png.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/history.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/passthrough.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/retry.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/router.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/runnables/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tools/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tools/structured.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/core.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/evaluation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/langchain.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/tracers/run_collector.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/aiter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/function_calling.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/html.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/iter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/json_schema.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/mustache.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/pydantic.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/usage.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/utils/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/vectorstores/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/langchain_core/vectorstores/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/_api/test_beta_decorator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/_api/test_deprecation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/callbacks/test_dispatch_custom_event.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/conftest.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/embeddings/test_deterministic_embedding.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/fake/test_fake_chat_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/indexing/test_in_memory_indexer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/indexing/test_indexing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/language_models/chat_models/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/language_models/chat_models/test_rate_limiting.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/language_models/llms/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/load/test_serializable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_list_parser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_openai_functions.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_openai_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_pydantic_parser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/output_parsers/test_xml_parser.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/prompts/test_chat.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/prompts/test_prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/pydantic_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_concurrency.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_configurable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_context.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_fallbacks.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_graph.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_history.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_runnable.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_runnable_events_v1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_runnable_events_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_tracing_interops.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/runnables/test_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_messages.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_pydantic_serde.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_setup.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/test_tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/tracers/test_langchain.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/tracers/test_memory_stream.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/utils/test_function_calling.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/utils/test_pydantic.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/vectorstores/test_in_memory.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/core/tests/unit_tests/vectorstores/test_vectorstore.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/agents/openai_assistant/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/agents/output_parsers/json.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/chains/elasticsearch_database/prompts.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/chains/retrieval.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/chains/sql_database/prompt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/embeddings/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/indexes/vectorstore.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/langchain/model_laboratory.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/langchain/tests/unit_tests/callbacks/test_file.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/anthropic/langchain_anthropic/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/anthropic/tests/integration_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/chroma/langchain_chroma/vectorstores.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/deepseek/langchain_deepseek/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/deepseek/tests/integration_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/huggingface/langchain_huggingface/llms/huggingface_pipeline.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/huggingface/tests/integration_tests/test_standard.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/huggingface/tests/unit_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/mistralai/langchain_mistralai/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/mistralai/langchain_mistralai/embeddings.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/mistralai/tests/unit_tests/test_chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/ollama/langchain_ollama/embeddings.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/chat_models/azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/chat_models/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/embeddings/azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/embeddings/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/langchain_openai/llms/azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/integration_tests/chat_models/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/integration_tests/llms/test_azure.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/unit_tests/chat_models/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/partners/openai/tests/unit_tests/embeddings/test_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/standard-tests/langchain_tests/integration_tests/chat_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/standard-tests/langchain_tests/integration_tests/tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/standard-tests/tests/unit_tests/test_basic_tool.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/text-splitters/langchain_text_splitters/html.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "libs/text-splitters/tests/unit_tests/test_text_splitters.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/async_io.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/builder.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/evoformer_attn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/gds.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/hpu/builder.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/mlu/fused_adam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/npu/async_io.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/npu/fused_adam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "op_builder/xpu/async_io.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "playground/benchmark/benchmark_api_provider.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "read_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "run.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "scripts/deberta_scrtipt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "setup.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/agents.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/evaluate_agent.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/python_interpreter.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/tools.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/agents/translation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/cache_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/commands/add_fast_image_processor.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/commands/add_new_model_like.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/commands/transformers_cli.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/configuration_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/data/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/data/data_collator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/generation/candidate_generator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/generation/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_processing_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_processing_utils_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_transforms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/image_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/bitsandbytes.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/deepspeed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/executorch.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/finegrained_fp8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/higgs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/sdpa_attention.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/spqr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/integrations/tiktoken.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/loss/loss_grounding_dino.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/loss/loss_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/modeling_gguf_pytorch_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/modeling_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/albert/modeling_albert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/aria/configuration_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/aria/modeling_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/aria/modular_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/audio_spectrogram_transformer/modeling_audio_spectrogram_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/configuration_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/image_processing_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/modeling_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/processing_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/auto/tokenization_auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bamba/modeling_bamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bamba/modular_bamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/beit/modeling_beit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/beit/modeling_flax_beit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bert/modeling_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bert_generation/modeling_bert_generation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/big_bird/modeling_big_bird.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/biogpt/modeling_biogpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bit/modeling_bit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/blip/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/blip/image_processing_blip_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/blip_2/modeling_blip_2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/bloom/modeling_bloom.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/camembert/modeling_camembert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/chameleon/modeling_chameleon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/clip/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/clip/image_processing_clip_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/clip/modeling_clip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/codegen/modeling_codegen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere/configuration_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere/modeling_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere/modular_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere2/configuration_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere2/modeling_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/cohere2/modular_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/conditional_detr/modeling_conditional_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/convnext/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/convnext/image_processing_convnext_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/ctrl/modeling_ctrl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dab_detr/modeling_dab_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/data2vec/modeling_data2vec_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/data2vec/modeling_data2vec_vision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dbrx/modeling_dbrx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deformable_detr/image_processing_deformable_detr_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deformable_detr/modeling_deformable_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deit/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deit/image_processing_deit_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deit/modeling_deit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/gptsan_japanese/tokenization_gptsan_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/open_llama/modeling_open_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/tvlt/modeling_tvlt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/deprecated/vit_hybrid/modeling_vit_hybrid.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/configuration_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/convert_depth_pro_weights_to_hf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/image_processing_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/image_processing_depth_pro_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/depth_pro/modeling_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/detr/image_processing_detr_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/detr/modeling_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/diffllama/modeling_diffllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2/configuration_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2/modeling_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2/modeling_flax_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dinov2_with_registers/modeling_dinov2_with_registers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/dpt/modeling_dpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/electra/modeling_electra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/emu3/modeling_emu3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/emu3/modular_emu3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/ernie/modeling_ernie.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/falcon/modeling_falcon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/falcon_mamba/modeling_falcon_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/flava/modeling_flava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/focalnet/modeling_focalnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/fuyu/modeling_fuyu.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/fuyu/processing_fuyu.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma/configuration_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma/modeling_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma/modular_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma2/configuration_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma2/modeling_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gemma2/modular_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/git/modeling_git.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/glm/configuration_glm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/glm/modeling_glm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/got_ocr2/configuration_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/got_ocr2/modeling_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/got_ocr2/modular_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt2/modeling_gpt2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_bigcode/modeling_gpt_bigcode.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neo/modeling_gpt_neo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox/configuration_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox/modeling_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox/modular_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox_japanese/modeling_gpt_neox_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gpt_neox_japanese/tokenization_gpt_neox_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/gptj/modeling_gptj.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granite/configuration_granite.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granite/modeling_granite.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granitemoe/modeling_granitemoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/granitemoeshared/modeling_granitemoeshared.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/grounding_dino/modeling_grounding_dino.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/helium/configuration_helium.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/helium/modeling_helium.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics/modeling_idefics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics/modeling_tf_idefics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics2/modeling_idefics2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/idefics3/modeling_idefics3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/ijepa/modeling_ijepa.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/imagegpt/modeling_imagegpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/instructblip/modeling_instructblip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/instructblipvideo/modeling_instructblipvideo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/instructblipvideo/modular_instructblipvideo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/jamba/modeling_jamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/jetmoe/modeling_jetmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/kosmos2/modeling_kosmos2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/kosmos2/processing_kosmos2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv2/tokenization_layoutlmv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv2/tokenization_layoutlmv2_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv3/tokenization_layoutlmv3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutlmv3/tokenization_layoutlmv3_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutxlm/tokenization_layoutxlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/layoutxlm/tokenization_layoutxlm_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/led/tokenization_led.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/led/tokenization_led_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llama/configuration_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llama/modeling_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/configuration_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/image_processing_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/image_processing_llava_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava/modeling_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/configuration_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/image_processing_llava_next_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/modeling_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next/processing_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/configuration_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/modeling_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/modular_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_next_video/processing_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/image_processing_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/image_processing_llava_onevision_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/modeling_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/modular_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/llava_onevision/processing_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/longt5/modeling_longt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/luke/modeling_luke.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/luke/tokenization_luke.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mamba/modeling_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/markuplm/tokenization_markuplm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/markuplm/tokenization_markuplm_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/maskformer/modeling_maskformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mbart/modeling_mbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/megatron_bert/modeling_megatron_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mimi/modeling_mimi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/configuration_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/modeling_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/modeling_tf_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mistral/modular_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mixtral/configuration_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mixtral/modeling_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mixtral/modular_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mllama/modeling_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mllama/processing_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mluke/tokenization_mluke.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mobilevit/modeling_mobilevit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mobilevit/modeling_tf_mobilevit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/moonshine/modeling_moonshine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/moshi/modeling_moshi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mpt/modeling_mpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/mt5/modeling_mt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/musicgen/modeling_musicgen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/nemotron/modeling_nemotron.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/nougat/tokenization_nougat_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo/configuration_olmo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo/modeling_olmo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo2/configuration_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo2/modeling_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmo2/modular_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/olmoe/modeling_olmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/openai/modeling_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/opt/modeling_opt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/owlv2/processing_owlv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/owlvit/processing_owlvit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/paligemma/configuration_paligemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/paligemma/modeling_paligemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/persimmon/modeling_persimmon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi/configuration_phi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi/modeling_phi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi3/configuration_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi3/modeling_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phi3/modular_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/phimoe/modeling_phimoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/pix2struct/modeling_pix2struct.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/pixtral/image_processing_pixtral_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/pop2piano/modeling_pop2piano.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2/configuration_qwen2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2/modeling_qwen2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/configuration_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/image_processing_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/modeling_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/modular_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_5_vl/processing_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_audio/modeling_qwen2_audio.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_audio/processing_qwen2_audio.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_moe/configuration_qwen2_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_moe/modeling_qwen2_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/configuration_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/image_processing_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/image_processing_qwen2_vl_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/modeling_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/qwen2_vl/processing_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/recurrent_gemma/modeling_recurrent_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/reformer/modeling_reformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rembert/modeling_rembert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roberta/modeling_roberta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roberta_prelayernorm/modeling_roberta_prelayernorm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roc_bert/modeling_roc_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roc_bert/tokenization_roc_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/roformer/modeling_roformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr/image_processing_rt_detr_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr/modeling_rt_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr/modular_rt_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr_v2/modeling_rt_detr_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rt_detr_v2/modular_rt_detr_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/rwkv/modeling_rwkv.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/sam/processing_sam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/seamless_m4t/modeling_seamless_m4t.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/seamless_m4t_v2/modeling_seamless_m4t_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/seggpt/modeling_seggpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/configuration_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/convert_siglip_to_hf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/image_processing_siglip_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/modeling_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip/processing_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/configuration_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/convert_siglip2_to_hf.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/image_processing_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/image_processing_siglip2_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/modeling_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/modular_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/siglip2/processing_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/configuration_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/image_processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/modeling_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/modular_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/smolvlm/video_processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/stablelm/modeling_stablelm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/starcoder2/configuration_starcoder2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/starcoder2/modeling_starcoder2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/swin2sr/modeling_swin2sr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/switch_transformers/modeling_switch_transformers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/t5/modeling_t5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/tapas/tokenization_tapas.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/udop/modeling_udop.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/udop/tokenization_udop.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/udop/tokenization_udop_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/umt5/modeling_umt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/video_llava/configuration_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/video_llava/modeling_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/videomae/modeling_videomae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vilt/modeling_vilt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vipllava/configuration_vipllava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vipllava/modeling_vipllava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit/image_processing_vit_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit/modeling_vit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit_mae/modeling_vit_mae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vit_msn/modeling_vit_msn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vitdet/modeling_vitdet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vitpose_backbone/modeling_vitpose_backbone.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/vivit/modeling_vivit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/wav2vec2/tokenization_wav2vec2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/whisper/generation_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/whisper/modeling_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xglm/modeling_tf_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xglm/modeling_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xlm/modeling_xlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xlm_roberta/modeling_xlm_roberta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xlm_roberta_xl/modeling_xlm_roberta_xl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/xmod/modeling_xmod.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/yolos/modeling_yolos.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/zamba/modeling_zamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/models/zamba2/modeling_zamba2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/image_text_to_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pipelines/zero_shot_image_classification.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/processing_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/pytorch_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/auto.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_compressed_tensors.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_finegrained_fp8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_higgs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/quantizers/quantizer_spqr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/testing_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/tokenization_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/tokenization_utils_base.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/tokenization_utils_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/trainer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/trainer_callback.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/training_args.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/doc.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/dummy_pt_objects.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/dummy_torchvision_objects.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/dummy_vision_objects.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/import_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "src/transformers/utils/quantization_config.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "test/export/test_export.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "test/quantization/pt2e/test_quantize_pt2e.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/deepspeed/test_deepspeed.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/generation/test_candidate_generator.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/generation/test_flax_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/generation/test_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/launch_openai_api_test_server.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/load_test.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/model/BingBertSquad/BingBertSquad_test_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/model/Megatron_GPT2/run_checkpoint_test.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/model/Megatron_GPT2/test_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/aria/test_modeling_aria.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/autoformer/test_modeling_autoformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bamba/test_modeling_bamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bark/test_modeling_bark.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bart/test_modeling_bart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bart/test_modeling_flax_bart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/beit/test_modeling_beit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bert/test_modeling_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bert_generation/test_modeling_bert_generation.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/big_bird/test_modeling_big_bird.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bigbird_pegasus/test_modeling_bigbird_pegasus.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/biogpt/test_modeling_biogpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bit/test_modeling_bit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot/test_modeling_blenderbot.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot/test_modeling_flax_blenderbot.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot_small/test_modeling_blenderbot_small.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blenderbot_small/test_modeling_flax_blenderbot_small.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blip/test_image_processing_blip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blip/test_modeling_blip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/blip_2/test_modeling_blip_2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bloom/test_modeling_bloom.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bloom/test_modeling_flax_bloom.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/bros/test_modeling_bros.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/chameleon/test_modeling_chameleon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/clip/test_image_processing_clip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/clvp/test_modeling_clvp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/codegen/test_modeling_codegen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cohere/test_modeling_cohere.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cohere2/test_modeling_cohere2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/conditional_detr/test_modeling_conditional_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/convnext/test_image_processing_convnext.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/convnext/test_modeling_convnext.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/convnextv2/test_modeling_convnextv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cpmant/test_modeling_cpmant.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/ctrl/test_modeling_ctrl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/cvt/test_modeling_cvt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dab_detr/test_modeling_dab_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/data2vec/test_modeling_data2vec_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/data2vec/test_modeling_data2vec_vision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dbrx/test_modeling_dbrx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/decision_transformer/test_modeling_decision_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/deformable_detr/test_modeling_deformable_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/deit/test_image_processing_deit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/deit/test_modeling_deit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_anything/test_modeling_depth_anything.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_pro/test_image_processing_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/depth_pro/test_modeling_depth_pro.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/detr/test_modeling_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/diffllama/test_modeling_diffllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinat/test_modeling_dinat.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinov2/test_modeling_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinov2/test_modeling_flax_dinov2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dinov2_with_registers/test_modeling_dinov2_with_registers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dpt/test_modeling_dpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dpt/test_modeling_dpt_auto_backbone.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/dpt/test_modeling_dpt_hybrid.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/efficientnet/test_modeling_efficientnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/electra/test_modeling_electra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/emu3/test_modeling_emu3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/ernie/test_modeling_ernie.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/esm/test_modeling_esm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/esm/test_modeling_esmfold.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/falcon/test_modeling_falcon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/falcon_mamba/test_modeling_falcon_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/flaubert/test_modeling_flaubert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/focalnet/test_modeling_focalnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/fsmt/test_modeling_fsmt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/fuyu/test_modeling_fuyu.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gemma/test_modeling_flax_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gemma/test_modeling_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gemma2/test_modeling_gemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/git/test_modeling_git.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/glm/test_modeling_glm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/glpn/test_modeling_glpn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/got_ocr2/test_modeling_got_ocr2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt2/test_modeling_flax_gpt2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt2/test_modeling_gpt2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_bigcode/test_modeling_gpt_bigcode.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neo/test_modeling_flax_gpt_neo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neo/test_modeling_gpt_neo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neox/test_modeling_gpt_neox.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gpt_neox_japanese/test_modeling_gpt_neox_japanese.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gptj/test_modeling_flax_gptj.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/gptj/test_modeling_gptj.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/granite/test_modeling_granite.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/granitemoe/test_modeling_granitemoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/grounding_dino/test_modeling_grounding_dino.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/helium/test_modeling_helium.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/hiera/test_modeling_hiera.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/idefics/test_modeling_idefics.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/idefics2/test_modeling_idefics2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/idefics3/test_modeling_idefics3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/ijepa/test_modeling_ijepa.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/imagegpt/test_modeling_imagegpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/informer/test_modeling_informer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/instructblip/test_modeling_instructblip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/instructblipvideo/test_modeling_instructblipvideo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/jamba/test_modeling_jamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/jetmoe/test_modeling_jetmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/kosmos2/test_modeling_kosmos2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/led/test_modeling_led.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/lilt/test_modeling_lilt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llama/test_modeling_flax_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llama/test_modeling_llama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_configuration_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_image_processing_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_modeling_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava/test_processor_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next/test_image_processing_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next/test_modeling_llava_next.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next_video/test_image_processing_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next_video/test_modeling_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_next_video/test_processor_llava_next_video.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_onevision/test_image_processing_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_onevision/test_modeling_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/llava_onevision/test_processor_llava_onevision.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/longt5/test_modeling_flax_longt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/longt5/test_modeling_longt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/m2m_100/test_modeling_m2m_100.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mamba/test_modeling_mamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mamba2/test_modeling_mamba2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/marian/test_modeling_flax_marian.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/marian/test_modeling_marian.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mask2former/test_modeling_mask2former.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/maskformer/test_modeling_maskformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/maskformer/test_modeling_maskformer_swin.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mbart/test_modeling_flax_mbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mbart/test_modeling_mbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/megatron_bert/test_modeling_megatron_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mistral/test_modeling_flax_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mistral/test_modeling_mistral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mixtral/test_modeling_mixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mllama/test_modeling_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mllama/test_processor_mllama.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilenet_v1/test_modeling_mobilenet_v1.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilenet_v2/test_modeling_mobilenet_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilevit/test_modeling_mobilevit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mobilevitv2/test_modeling_mobilevitv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/modernbert/test_modeling_modernbert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/moonshine/test_modeling_moonshine.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/moshi/test_modeling_moshi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mpt/test_modeling_mpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mra/test_modeling_mra.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mt5/test_modeling_mt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/musicgen/test_modeling_musicgen.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/musicgen_melody/test_modeling_musicgen_melody.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/mvp/test_modeling_mvp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/nemotron/test_modeling_nemotron.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/nllb_moe/test_modeling_nllb_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/olmo/test_modeling_olmo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/olmo2/test_modeling_olmo2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/olmoe/test_modeling_olmoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/openai/test_modeling_openai.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/opt/test_modeling_flax_opt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/opt/test_modeling_opt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/owlv2/test_processor_owlv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/owlvit/test_processor_owlvit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/paligemma/test_modeling_paligemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/paligemma2/test_modeling_paligemma2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/patchtsmixer/test_modeling_patchtsmixer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pegasus/test_modeling_flax_pegasus.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pegasus/test_modeling_pegasus.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pegasus_x/test_modeling_pegasus_x.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/persimmon/test_modeling_persimmon.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/phi/test_modeling_phi.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/phi3/test_modeling_phi3.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/phimoe/test_modeling_phimoe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pix2struct/test_modeling_pix2struct.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pixtral/test_image_processing_pixtral.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/plbart/test_modeling_plbart.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/poolformer/test_modeling_poolformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pop2piano/test_modeling_pop2piano.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/prophetnet/test_modeling_prophetnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pvt/test_modeling_pvt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/pvt_v2/test_modeling_pvt_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2/test_modeling_qwen2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/test_image_processing_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/test_modeling_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_5_vl/test_processor_qwen2_5_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_audio/test_modeling_qwen2_audio.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_moe/test_modeling_qwen2_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/qwen2_vl/test_modeling_qwen2_vl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/recurrent_gemma/test_modeling_recurrent_gemma.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/reformer/test_modeling_reformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/regnet/test_modeling_regnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rembert/test_modeling_rembert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/resnet/test_modeling_resnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roberta/test_modeling_roberta.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roberta_prelayernorm/test_modeling_roberta_prelayernorm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roc_bert/test_modeling_roc_bert.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/roformer/test_modeling_roformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rt_detr/test_modeling_rt_detr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rt_detr_v2/test_modeling_rt_detr_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/rwkv/test_modeling_rwkv.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/sam/test_modeling_sam.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/seamless_m4t/test_modeling_seamless_m4t.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/seamless_m4t_v2/test_modeling_seamless_m4t_v2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/segformer/test_modeling_segformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/seggpt/test_modeling_seggpt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip/test_image_processing_siglip.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip2/test_image_processing_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/siglip2/test_modeling_siglip2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/test_image_processing_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/test_modeling_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/smolvlm/test_processor_smolvlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/speech_to_text/test_modeling_speech_to_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/speecht5/test_modeling_speecht5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/stablelm/test_modeling_stablelm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/starcoder2/test_modeling_starcoder2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/superglue/test_modeling_superglue.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/superpoint/test_modeling_superpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swiftformer/test_modeling_swiftformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swin/test_modeling_swin.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swin2sr/test_modeling_swin2sr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/swinv2/test_modeling_swinv2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/switch_transformers/test_modeling_switch_transformers.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/t5/test_modeling_flax_t5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/t5/test_modeling_t5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/table_transformer/test_modeling_table_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/textnet/test_modeling_textnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/time_series_transformer/test_modeling_time_series_transformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/timesformer/test_modeling_timesformer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/trocr/test_modeling_trocr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/udop/test_modeling_udop.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/umt5/test_modeling_umt5.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/upernet/test_modeling_upernet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/video_llava/test_image_processing_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/video_llava/test_modeling_video_llava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/videomae/test_modeling_videomae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vipllava/test_modeling_vipllava.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit/test_image_processing_vit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit/test_modeling_vit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit_mae/test_modeling_vit_mae.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vit_msn/test_modeling_vit_msn.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitdet/test_modeling_vitdet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitmatte/test_modeling_vitmatte.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitpose/test_modeling_vitpose.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vitpose_backbone/test_modeling_vitpose_backbone.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/vivit/test_modeling_vivit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/whisper/test_modeling_flax_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/whisper/test_modeling_whisper.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xglm/test_modeling_flax_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xglm/test_modeling_tf_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xglm/test_modeling_xglm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xlm/test_modeling_xlm.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xlm_roberta_xl/test_modeling_xlm_roberta_xl.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xlnet/test_modeling_xlnet.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/xmod/test_modeling_xmod.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/yolos/test_modeling_yolos.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/yoso/test_modeling_yoso.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/zamba/test_modeling_zamba.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/zamba2/test_modeling_zamba2.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/models/zoedepth/test_modeling_zoedepth.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/peft_integration/test_peft_integration.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/pipelines/test_pipelines_audio_classification.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/pipelines/test_pipelines_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/pipelines/test_pipelines_image_text_to_text.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/bnb/test_4bit.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/bnb/test_mixed_int8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensor/test_load_sparse_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensor/test_run_compressed_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensors/test_compressed_models.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/compressed_tensors/test_compressed_tensors.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/finegrained_fp8/test_fp8.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/ggml/test_ggml.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/higgs/test_higgs.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/spqr_integration/test_spqr.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/quantization/torchao_integration/test_torchao.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/repo_utils/modular/test_conversion_order.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_image_processing_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_image_transforms.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_image_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_modeling_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_modeling_flax_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_openai_vision_api.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_processing_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_tokenization_common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/test_training_args.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/tokenization/test_tokenization_fast.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/trainer/test_trainer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/trainer/test_trainer_callback.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/alexnet_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/checkpoint/common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/checkpoint/test_universal_checkpoint.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/checkpoint/test_zero_optimizer.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/common.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/inference/test_inference.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/launcher/test_multinode_runner.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/linear/test_ctx.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/model_parallelism/test_autotp_training.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/model_parallelism/test_configurable_parallel_mp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/model_parallelism/test_configurable_parallel_pp.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/moe/test_moe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/ops/transformer/inference/test_rope.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/pipe/test_pipe_module.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/activation_checkpointing/test_activation_checkpointing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/comm/test_coalesced_collectives.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/pipe/test_pipe.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/test_ds_initialize.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/test_no_sync_ctxt.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_nvme_checkpointing.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_offload_states.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_zero.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_zero_context.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/runtime/zero/test_zero_multiple_run.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/simple_model.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/unit/util.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_cache_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_image_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_import_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "tests/utils/test_modeling_utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_export/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_logging/_internal.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/_logging/_registrations.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/ao/quantization/__init__.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/ao/quantization/pt2e/utils.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/ao/quantization/quantize_pt2e.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/nn/modules/normalization.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "torch/testing/_internal/common_modules.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_copies.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_docstrings.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_modular_conversion.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_repo.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/check_table.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/create_dependency_mapping.py": {
        "dtype": "string",
        "_type": "Value"
      },
      "utils/modular_model_converter.py": {
        "dtype": "string",
        "_type": "Value"
      }
    },
    "repo": {
      "dtype": "string",
      "_type": "Value"
    },
    "pr_number": {
      "dtype": "int64",
      "_type": "Value"
    }
  },
  "homepage": "",
  "license": ""
}